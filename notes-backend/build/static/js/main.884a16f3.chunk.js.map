{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","useEffect","noteService","initialNotes","notesToShow","filter","onSubmit","event","preventDefault","console","log","type","value","name","onChange","target","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","noteObject","date","Date","Math","random","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.884a16f3.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'make not important' : 'make important';\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update };\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Note from './components/Note';\r\nimport Notification from './components/Notification';\r\nimport noteService from './services/notes';\r\n\r\nimport './index.css';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16,\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2020\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  /*const hook = () => {\r\n    console.log('effect');\r\n    axios.get('http://localhost:3001/notes').then((response) => {\r\n      console.log('promise fulfilled');\r\n      setNotes(response.data);\r\n    });\r\n  };\r\n\r\n  useEffect(hook, []); */\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((initialNotes) => {\r\n      setNotes(initialNotes);\r\n    });\r\n  }, []);\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date(),\r\n      important: Math.random() > 0.5,\r\n    };\r\n    noteService.create(noteObject).then((returnedNote) => {\r\n      setNotes(notes.concat(returnedNote));\r\n      setNewNote('');\r\n    });\r\n  };\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value);\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then((returnedNote) => {\r\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        );\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n      });\r\n  };\r\n\r\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n    console.log('logging in with', username, password);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note, i) => (\r\n          <Note\r\n            key={i}\r\n            note={note}\r\n            // arrow function when passing a function with a argument! Turns it into a declaration and not a call x)\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}